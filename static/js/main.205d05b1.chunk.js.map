{"version":3,"sources":["firebase/firebase.js","firebase/image.js","firebase/firestore.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","projectFirestore","firestore","FieldValue","serverTimestamp","Image","docs","collection","useState","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","Firestores","className","map","op","i","src","url","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAeEA,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKYP,IAASQ,UAA9B,IACMC,EAAiBT,IAASU,YAChBV,IAASU,UAAUC,WAAWC,gB,WChBjC,SAASC,IACpB,IAAOC,ECDI,SAAoBC,GAC/B,MAAqBC,mBAAS,IAA9B,mBAAOF,EAAP,KAAYG,EAAZ,KAuBA,OAtBAC,qBAAU,WACP,IAAMC,EAAOV,EAAiBM,WAAWA,GACvCK,QAAQ,YAAY,QACpBC,YAAW,SAACC,GACT,IAAIC,EAAU,GACdD,EAAKE,SAAQ,SAAAC,GACTF,EAAUG,KAAV,2BAAmBD,EAAIE,QAAvB,IAA8BC,GAAGH,EAAIG,SAEzCX,EAAQM,MAGZ,OAAO,WACHJ,OAKL,CAACJ,IAKG,CAACD,QDvBOe,CAAW,SAAnBf,KAGP,OACI,qBAAKgB,UAAU,OAAf,gBAEIhB,QAFJ,IAEIA,OAFJ,EAEIA,EAAMiB,KAAI,SAACC,EAAGC,GAAJ,OAEF,qBAAKH,UAAU,OAAf,SACA,qBAAKA,UAAU,QAAf,SACI,qBAAKI,IAAKF,EAAGG,SAFWH,EAAGJ,S,MECpCQ,MAXf,WACE,OACE,qBAAKN,UAAU,MAAf,SACA,cAACjB,EAAD,OCOWwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.205d05b1.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport  'firebase/storage'\r\nimport  'firebase/firestore'\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDn1QRN-35KyIScNEQ3sMD0Z9WApq2y66w\",\r\n    authDomain: \"fire-goo-55f96.firebaseapp.com\",\r\n    projectId: \"fire-goo-55f96\",\r\n    storageBucket: \"fire-goo-55f96.appspot.com\",\r\n    messagingSenderId: \"665649498099\",\r\n    appId: \"1:665649498099:web:ab0ed1cbeeda46530d7486\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const projectStorage=firebase.storage();\r\n  const projectFirestore=firebase.firestore();\r\n  const timestamp=firebase.firestore.FieldValue.serverTimestamp;\r\n  export {projectFirestore,projectStorage,timestamp};","import React from 'react'\r\nimport './image.css'\r\nimport Firestores from './firestore'\r\nexport default function Image() {\r\n    const {docs} = Firestores('image')\r\n    \r\n    \r\n    return (\r\n        <div className=\"Grid\">\r\n            {\r\n            docs?.map((op,i)=>\r\n                (\r\n                    <div className='wrap'  key={op.id}>\r\n                    <div className=\"imgBx\">\r\n                        <img src={op.url}  />\r\n                    </div>\r\n\r\n                </div>\r\n                )\r\n            )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState,useEffect } from 'react'\r\nimport { projectFirestore } from './firebase';\r\n\r\nexport default function Firestores(collection) {\r\n    const [docs,setDocs]=useState([]);\r\n    useEffect(() => {\r\n       const unsub= projectFirestore.collection(collection)\r\n        .orderBy('createdAt','desc')\r\n        .onSnapshot((snap)=>{\r\n            let documents=[];\r\n            snap.forEach(doc=>{\r\n                documents.push({...doc.data(),id:doc.id})\r\n            });\r\n            setDocs(documents)\r\n        })\r\n\r\n        return ()=>{\r\n            unsub();\r\n        }\r\n\r\n\r\n\r\n    }, [collection])\r\n    \r\n    \r\n\r\n    \r\n    return {docs};\r\n}\r\n","import Image from './firebase/image';\nimport './App.css'\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Image/>\n    \n    \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}